<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau table 4)' inline='true' name='federated.0lggqat1i1crfm16wbkhl1nrftp7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 4' name='excel-direct.14eounw0rzjlim16omjq809vosch'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ASUS/Downloads/Tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.14eounw0rzjlim16omjq809vosch' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='population' ordinal='2' />
            <column datatype='integer' name='Highest_infection_count' ordinal='3' />
            <column datatype='real' name='Infection_rate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.14eounw0rzjlim16omjq809vosch' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='population' ordinal='2' />
            <column datatype='integer' name='Highest_infection_count' ordinal='3' />
            <column datatype='real' name='Infection_rate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6F5FA0BAF2242679141937DBFAD86DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6F5FA0BAF2242679141937DBFAD86DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6F5FA0BAF2242679141937DBFAD86DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_infection_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6F5FA0BAF2242679141937DBFAD86DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infection_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infection_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Infection_rate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6F5FA0BAF2242679141937DBFAD86DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest infection count' datatype='integer' name='[Highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Infection rate' datatype='real' name='[Infection_rate]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C6F5FA0BAF2242679141937DBFAD86DA]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Location,MONTH(Date))]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:location:nk]' />
          <groupfilter function='level-members' level='[tmn:date:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Timor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Macao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C6F5FA0BAF2242679141937DBFAD86DA'>
            <properties context=''>
              <relation connection='excel-direct.14eounw0rzjlim16omjq809vosch' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='population' ordinal='2' />
                  <column datatype='integer' name='Highest_infection_count' ordinal='3' />
                  <column datatype='real' name='Infection_rate' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.1icmsja13zh8fx1ddh1d91brtre5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1h8izfl125m6u41f7cnzp1jc09ss'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ASUS/Downloads/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1h8izfl125m6u41f7cnzp1jc09ss' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='Deathpercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1h8izfl125m6u41f7cnzp1jc09ss' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='Deathpercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_25802D90731A4DD9B748056B9B3759A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_25802D90731A4DD9B748056B9B3759A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deathpercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deathpercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Deathpercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_25802D90731A4DD9B748056B9B3759A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_25802D90731A4DD9B748056B9B3759A9]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_25802D90731A4DD9B748056B9B3759A9'>
            <properties context=''>
              <relation connection='excel-direct.1h8izfl125m6u41f7cnzp1jc09ss' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='Deathpercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.0rqz6140zg6p301g30cp7185yq70' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1ihfc4g13ltnp611ca3im06sdarw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ASUS/Downloads/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ihfc4g13ltnp611ca3im06sdarw' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Totaldeathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ihfc4g13ltnp611ca3im06sdarw' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Totaldeathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_32EB5013A7934C9C86DC307E98BB6D7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Totaldeathcount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Totaldeathcount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Totaldeathcount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_32EB5013A7934C9C86DC307E98BB6D7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_32EB5013A7934C9C86DC307E98BB6D7E]' role='measure' type='quantitative' />
      <column caption=' Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#c14f22'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f49234'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f7ae54'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_32EB5013A7934C9C86DC307E98BB6D7E'>
            <properties context=''>
              <relation connection='excel-direct.1ihfc4g13ltnp611ca3im06sdarw' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='Totaldeathcount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.0jlfkqc1nuc44r1d55fmi06ebrah' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0izeaxu0w529vr11tw3nj086d6oz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ASUS/Downloads/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0izeaxu0w529vr11tw3nj086d6oz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_infection_count' ordinal='2' />
            <column datatype='real' name='Infection_rate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0izeaxu0w529vr11tw3nj086d6oz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_infection_count' ordinal='2' />
            <column datatype='real' name='Infection_rate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D211:no:A1:D211:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_56193A7801044A1AB5575F8A3FCF2AB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_56193A7801044A1AB5575F8A3FCF2AB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_infection_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_56193A7801044A1AB5575F8A3FCF2AB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infection_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infection_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Infection_rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_56193A7801044A1AB5575F8A3FCF2AB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest infection count' datatype='integer' name='[Highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Infection rate' datatype='real' name='[Infection_rate]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_56193A7801044A1AB5575F8A3FCF2AB1]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_56193A7801044A1AB5575F8A3FCF2AB1'>
            <properties context=''>
              <relation connection='excel-direct.0izeaxu0w529vr11tw3nj086d6oz' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='Highest_infection_count' ordinal='2' />
                  <column datatype='real' name='Infection_rate' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0jlfkqc1nuc44r1d55fmi06ebrah'>
      <datasources>
        <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0jlfkqc1nuc44r1d55fmi06ebrah' />
      </datasources>
      <datasource-dependencies datasource='federated.0jlfkqc1nuc44r1d55fmi06ebrah'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[none:location:nk]'>
        <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.0lggqat1i1crfm16wbkhl1nrftp7'>
      <datasources>
        <datasource caption='Sheet1 (Tableau table 4)' name='federated.0lggqat1i1crfm16wbkhl1nrftp7' />
      </datasources>
      <datasource-dependencies datasource='federated.0lggqat1i1crfm16wbkhl1nrftp7' />
      <filter class='categorical' column='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[Action (Location)]'>
        <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_91F447FACA324075BEF37E36336BC487]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.0rqz6140zg6p301g30cp7185yq70'>
      <datasources>
        <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0rqz6140zg6p301g30cp7185yq70' />
      </datasources>
      <datasource-dependencies datasource='federated.0rqz6140zg6p301g30cp7185yq70'>
        <column caption=' Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0rqz6140zg6p301g30cp7185yq70].[none:location:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:location:nk]' />
          <groupfilter function='member' level='[none:location:nk]' member='%null%' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action2_91F447FACA324075BEF37E36336BC487]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_3A7C8614B68D4E55ABF3BABD6209C106]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_886F05CDEAB64F2598D2A4A647165970]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='12'>Æ </run>
            <run bold='true' fontname='Tableau Bold' fontsize='12'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.1icmsja13zh8fx1ddh1d91brtre5' />
          </datasources>
          <datasource-dependencies datasource='federated.1icmsja13zh8fx1ddh1d91brtre5'>
            <column datatype='real' name='[Deathpercentage]' role='measure' type='quantitative' />
            <column-instance column='[Deathpercentage]' derivation='Sum' name='[sum:Deathpercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1icmsja13zh8fx1ddh1d91brtre5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1icmsja13zh8fx1ddh1d91brtre5].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1icmsja13zh8fx1ddh1d91brtre5].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1icmsja13zh8fx1ddh1d91brtre5].[sum:Deathpercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1icmsja13zh8fx1ddh1d91brtre5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1icmsja13zh8fx1ddh1d91brtre5].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1icmsja13zh8fx1ddh1d91brtre5].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1icmsja13zh8fx1ddh1d91brtre5].[sum:Deathpercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1icmsja13zh8fx1ddh1d91brtre5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1icmsja13zh8fx1ddh1d91brtre5].[:Measure Names]' value='147' />
            <format attr='height' value='40' />
            <format attr='text-format' field='[federated.1icmsja13zh8fx1ddh1d91brtre5].[sum:Deathpercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='font-family' value='Tw Cen MT Condensed Extra Bold' />
            <format attr='font-size' value='14' />
            <format attr='color' value='#f17b79' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1icmsja13zh8fx1ddh1d91brtre5].[:Measure Names]' value='36' />
            <format attr='color' data-class='subtotal' field='[federated.1icmsja13zh8fx1ddh1d91brtre5].[:Measure Names]' value='#f28e2b' />
            <format attr='width-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1icmsja13zh8fx1ddh1d91brtre5].[:Measure Names]' value='11' />
            <format attr='font-family' value='Tw Cen MT Condensed Extra Bold' />
            <format attr='font-size' value='14' />
            <format attr='font-size' scope='cols' value='14' />
            <format attr='color' value='#e15759' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1icmsja13zh8fx1ddh1d91brtre5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1icmsja13zh8fx1ddh1d91brtre5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7B4A482E-9ECA-4B1D-8262-0E717542016C}' />
    </worksheet>
    <worksheet lock-quick-filters='true' name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Æ </run>
            <run bold='true' fontname='Tableau Bold' fontsize='12'>Total Deaths Per Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0rqz6140zg6p301g30cp7185yq70' />
          </datasources>
          <datasource-dependencies datasource='federated.0rqz6140zg6p301g30cp7185yq70'>
            <column datatype='integer' name='[Totaldeathcount]' role='measure' type='quantitative' />
            <column caption=' Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Totaldeathcount]' derivation='Sum' name='[sum:Totaldeathcount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0rqz6140zg6p301g30cp7185yq70].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0rqz6140zg6p301g30cp7185yq70].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rqz6140zg6p301g30cp7185yq70].[sum:Totaldeathcount:qk]' field-type='quantitative' max='1200000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' field='[federated.0rqz6140zg6p301g30cp7185yq70].[sum:Totaldeathcount:qk]' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rqz6140zg6p301g30cp7185yq70].[none:location:nk]' value='68' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#00000000' />
            <format attr='background-color' field='[federated.0rqz6140zg6p301g30cp7185yq70].[sum:Totaldeathcount:qk]' value='#dfe7e8' />
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0rqz6140zg6p301g30cp7185yq70].[sum:Totaldeathcount:qk]' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfe7e8' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rqz6140zg6p301g30cp7185yq70].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rqz6140zg6p301g30cp7185yq70].[sum:Totaldeathcount:qk]</rows>
        <cols>[federated.0rqz6140zg6p301g30cp7185yq70].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{DA502BE2-0A1C-421F-BC5B-42499DC76819}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold' fontsize='12'>Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0jlfkqc1nuc44r1d55fmi06ebrah' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jlfkqc1nuc44r1d55fmi06ebrah'>
            <column caption='Infection rate' datatype='real' name='[Infection_rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Infection_rate]' derivation='Sum' name='[sum:Infection_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action3_3A7C8614B68D4E55ABF3BABD6209C106]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[none:location:nk]</column>
            <column>[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[Longitude (generated)]' field-type='quantitative' max='23141401.582195505' min='-11401071.295515072' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[Latitude (generated)]' field-type='quantitative' max='16366874.166002426' min='-11011233.707433663' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfe7e8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[sum:Infection_rate:qk]' value='Percent Population Infected' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[sum:Infection_rate:qk]' />
              <lod column='[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[none:location:nk]' />
              <geometry column='[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[Latitude (generated)]</rows>
        <cols>[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EB80AE93-F88B-476F-9E11-A59BC75F0D4D}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ </run>
            <run fontname='Tableau Bold' fontsize='12'>Percent Population Infected</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 4)' name='federated.0lggqat1i1crfm16wbkhl1nrftp7' />
          </datasources>
          <datasource-dependencies datasource='federated.0lggqat1i1crfm16wbkhl1nrftp7'>
            <column caption='Infection rate' datatype='real' name='[Infection_rate]' role='measure' type='quantitative' />
            <column-instance column='[Infection_rate]' derivation='Avg' name='[avg:Infection_rate:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[Inclusions (Location,MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='level-members' level='[tmn:date:qk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lggqat1i1crfm16wbkhl1nrftp7].[none:location:nk]</column>
            <column>[federated.0lggqat1i1crfm16wbkhl1nrftp7].[Action (Location)]</column>
            <column>[federated.0lggqat1i1crfm16wbkhl1nrftp7].[Inclusions (Location,MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[tmn:date:qk]' scope='cols' value=' Month' />
            <encoding attr='space' class='0' field='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[avg:Infection_rate:qk]' field-type='quantitative' major-origin='0.0' major-spacing='2.0' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[tmn:date:qk]' value='246' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfe7e8' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lggqat1i1crfm16wbkhl1nrftp7].[avg:Infection_rate:qk]</rows>
        <cols>[federated.0lggqat1i1crfm16wbkhl1nrftp7].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{FB9D61BF-2965-4691-83B1-3F8055056D0D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ </run>
            <run bold='true' fontname='Verdana'>COVID-19 Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f3ebf3' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#000000' />
          <format attr='background-color' value='#dfe7e8' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='13' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
            <zone fixed-size='28' h='4688' id='14' is-fixed='true' type-v2='title' w='98438' x='781' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93228' id='11' type-v2='layout-basic' w='98438' x='781' y='5730' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='14063' id='3' name='Sheet 1' w='45508' x='586' y='5990' />
        <zone h='32031' id='4' name='Sheet 2' w='44727' x='488' y='20964' />
        <zone h='46745' id='6' name='Sheet 3' w='38770' x='46777' y='6120' />
        <zone h='30729' id='8' name='Sheet 4' w='83301' x='2051' y='54297' />
        <zone h='78906' id='9' name='Sheet 4' pane-specification-id='0' param='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[none:location:nk]' type-v2='color' w='12305' x='86719' y='6120' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Æ </run>
                <run bold='true' fontname='Verdana'>COVID-19 Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='21' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone fixed-size='28' h='4688' id='14' type-v2='title' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='108' h='14063' id='3' is-fixed='true' name='Sheet 1' w='45508' x='586' y='5990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46745' id='6' is-fixed='true' name='Sheet 3' w='38770' x='46777' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='32031' id='4' is-fixed='true' name='Sheet 2' w='44727' x='488' y='20964'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='236' h='30729' id='8' is-fixed='true' name='Sheet 4' w='83301' x='2051' y='54297'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='78906' id='9' name='Sheet 4' pane-specification-id='0' param='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[none:location:nk]' type-v2='color' w='12305' x='86719' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6504399E-421E-4EB2-BDC8-A3C8DA66A225}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lggqat1i1crfm16wbkhl1nrftp7].[none:location:nk]</field>
            <field>[federated.1icmsja13zh8fx1ddh1d91brtre5].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE2ABC5A-87D2-437A-BFBE-9BCFAFCC255A}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rqz6140zg6p301g30cp7185yq70].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rqz6140zg6p301g30cp7185yq70].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2645B71-A291-4260-9D92-4D50A9A2A1CD}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[sum:Infection_rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jlfkqc1nuc44r1d55fmi06ebrah].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2A9B937E-7245-484F-8416-7301ADB96C5F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lggqat1i1crfm16wbkhl1nrftp7].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lggqat1i1crfm16wbkhl1nrftp7].[none:location:nk]</field>
            <field>[federated.0lggqat1i1crfm16wbkhl1nrftp7].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{925631EA-BF25-4CD6-8D4D-D6C2F313E5AB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.0rqz6140zg6p301g30cp7185yq70].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0lggqat1i1crfm16wbkhl1nrftp7].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4D8C8A14-95AD-4717-A884-5D55AF98B505}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='80' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABQCAYAAABPunpEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAKFUlEQVR4nO2de3BU1R3HP+dudsnmQdgQYngpj0AkGJAqSlWm1NJJa+oULFZrrZ2prZ06
      OtrpTDtOW2u10zq1juOMdSozjPahtWCLStEyKlrwEURAwiNgwkt5StgkZDcbNrv39I+z2ewm
      m7AgsKTn95nJ7N1zf+fc382e7zm/89vkHqW11giCpTi5dkAQcokIQLAaEYBgNXl9C0ItoVz4
      IQg5QWYAwWpEAILViAAEqxEBCFYjAhCsRgQgWI0IQLAaEYBgNSIAwWpEAILViAAEqxEBCFYj
      AhCsRgQgWI0IQLAaEYBgNf3+IUY4kxwm8rv7iRxIL/XdsZiiGWfqGh8SuutJoozD/8v78V+Q
      wSTeQnT5n+l8dyduFNRV9xC4ZfqZcmBIIwI4D4mvepD2Ffth9p2UfvfSz9jYQSKPPkTk43iy
      SHd3f0YP/38QAZxVKvDftxh/wxKCi9fB2AWU3HcdnnPogfvOc4nOX4zv9l9RNGv4Obz6+Y8I
      IGeEia16htCqzbhRH2rCXIp+dBPeXUvM6A+w/knaKx6kZL5L11OP07n9OM6cy/HUr6N7sJAn
      STvRjR+Zw0sWUZjW+cN0v/AIobcOwsSr8EbeJXq4JzyLE1/zJzpe3Iwb9+NU11J4Sy3e4i5i
      q5YQemUrrqcMb+33KKqtRDGQ/bmU+ukhi+BcsWM5HSs240YBoui9b9Dx7DoyPaXMrf8Hndtb
      gThu/TqyD2Ai6Ig58kyciEo9tevfhN46iAb0HtP5kxx9ndDShG/xCO72TcRCoBuep2PFVpwF
      DxNYVE73ikcJre8a0H4oIALIEdEP3kEDzrU/pfShm8xU3LCe6NTbKbl+nDGafScltRXEmhsh
      YRt4YNEZmbbjzTuN2KbdRuCxu/EVpJzsDJlzZTPx//A3BB7/Of7RHrobPjA+jyxFjR2PQ5zu
      nU0D2g8FRAC5Im4WpXmVlRAYmfgggrjtA1fJq6xElZWfwoc2AieQuNy+fRlnF09lJco7Ck8g
      pfCir1AwJwAtm4k89QvaHl1l3E34HF18B8FHVuECtBzDHch+CCACyBUeM0LGmpuh9ZjpTJTi
      lAxcJd02G/LxXZbIIjUsJbyhtZ8I4s3N6HgQtzW1tBDfrb9lxL2L8AZA7/knkW29PntveYzS
      Jxabn3vn4QxkPwSQRXCO8M64HFW/Dnf17wmuThRWXoI3n36dNK9yGqxvTLfNEjX7BgrWbKdz
      TwfRp39G9GlMevWaKhT70Y1/ofWePpXCGwj9+iminT0FBaj8Xp+7n/sxwecAPOR962GGX9qc
      0X4oIDNAjlAzbqP4GzNxfAA+nJoFDP/BvIwfiDPnJgqqA4AHZ86VeE/pShXk3/sARfOqcPxm
      BFdeL0z+GkXzxqAANfEqfBWpdUrIm3YhygN4/OTV3kXBVFAzbqb4+oTPHj+eeXdTfHXJgPZD
      AdX38ejyaETBJmQGEKxGBCBYjQhAsBoRgGA1IgDBakQAgtWIAASrEQEIViMCEKxGBCBYjQhA
      sBoRgGA1J/1z6B17d5wLPwQhJ8hfgwpWIyGQYDUiAMFqRACC1YgABKsRAQhWIwIQrEYEIFiN
      CECwGhGAYDUiAMFqRACC1YgABKux6uG4euVydFNj8r2aMg1VtzDdKHoCd/nzcCh9Zzs1Zy5q
      ztxEQxrduBX9zpsQDoHPh6r5HOrzcyHvJE/uDHXgPv8MhDrS269biJoyzTRfvxZdvzZjdTV5
      KqruBnB6xy69oR69dvXA95TBB736P+h9u8F1oWSEub+q6aBU9j4cOWR+V9ET/Y0Ki3BuvBVG
      lA7uS46xSgBZEY2aTj0Ieuc29BuvJJ+XTzSK3lAPkTBqfl1a5+xHqANOd5M6x4HqGenth0Po
      LR9m38bxdtx//R3agr1lba3oVSsgHkdNn3nqPmRATZgEJYFBbc4HJATqS6gDTmQY0XroiqA3
      vk+mHSB00w70wU8GbV6HOjKPmNkwfASqYkx6e7uboL11gAoZrt/UaDq/46C+XIdzxz1wwWgz
      q33wHnSGT9mHfjgOTJqanE3OZ6yaAVTdQtShKwaetgEd6YTuKOT7cRZ9G8rK088fPQLBFtPe
      xErUdQvQG9ah171tRvaD+2HcRQM70dEOWkOgFOfG70BBYX8/U8Itva0B/fpK0Bo1eSoUFvUa
      dkXQWzaZ9rLl8CHzWlCIumhS8lUfOQThMLS3mbJsfBg9FufOn5jjtiDusr+Z2bOsHDV2fPY+
      5RCZAfrSFjRxcVcE99klJl4/drT3fFcEYjFzXDUdvD4TO/sTm2wd/XTw9o8Z8dAaxF3yBPrl
      Zf3WA0m6u6Fxi+ng+X5UVXXaab13N7R8irpwIhQVn/q9ZsNJfEj6suujZOioqqoh3392/DnD
      iAD6cvx477HWcPigiZmDx0xZTwfOy4PCxOjt9Z40JgaMsFLXF/E4encT7ktLIdLZ3771GLrF
      CEqVlUNgZO+57m7Y+qHZtqi6Jvv7GzbMvHaGzSK4LYjeud2U+XzpM8zJfEj1Zc8uc5zvR42f
      kL0/OcaqECgb1Bfmo74w37xpDeIu+6tZaL63xmRXRpaZc7GYCRnAdAA3i527HAf19W8mtyvV
      n+xFv7QUjh5Bb97Qm2UC6AzjvvqimXGKh6NqrzdCAyOcV19EH9qPqrsBVV6RcQO8jPf3pa/C
      mPHotW+gX38F7TjJ9YyaNRuGp2xSNpgPKej/vobevw+UQl1bC+UV/WzOV0QA2eJJjPD5fjP6
      x2KwcxtMnoL+ZG/vCD6qfMAmBqXPDKIPHTDxOKAunJAe4kQ60Z8eNkJ4eVla59dNjbCSgVOh
      SqGqa1DVNRAOmbi9LQiFRSa+z9aHHsIh9P6PzXFJADX2wlO46dwjAkglegL99puomllQWobe
      ttlkRZSC8RMBUCNHoYuHQ2sQvacZ/cc/9Nb3emFMYo9f10WveAG9p9ksFhfebNKl9WtRV1xt
      hNSw0QgptV6iLtsbzKvXC9NqTi+jkskH37Dk6dQMkrr4kvScfZY+6L27e9vou0gfAogAUolG
      0bub0A0b08tHj0NVJkbHgkLUldegX1vZLxWqplyMGpPIfrS3mcyK46BmXm463rEW9EeN6K3p
      eXs1uQo1OkUAwRb0gUQ6tawc1TekKCrG+f7dve9TvlxL+yIskw89hEPoTe+bdU5hEarm0vRr
      nMwHMOLdsdW04RuGqqzqb3OeIwJIJRZDlZaho1GTJs3LQ02rQV3zRRjWu++nqpoOgH5vjQkR
      Ur8JToQy+sDHZvYor0BNmJSoqGBEwKRRYzGzYJw1G3XZlck9eAGzOO2KmCqVVekd9xTI6EPP
      uS2bkgv7fqN/tj4EW0xaGIxAyk4z/Msh8lygs0FP6LF3F2p+HWr6DDt9GAJIGvRs0BN6jLoA
      NXmKvT4MAWQGEKxGZgDBakQAgtWIAASrEQEIViMCEKxGBCBYjQhAsBoRgGA1/wP5Rgf0IOgD
      owAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWHUlEQVR4nO3dWXtUV37v8e+ueVKNktA8ICEEAoSYzGSMsd12uzseuk96Op3kpM+Tc3Hu
      kqtc5h3kOS8gOYmTdtLuuNMmGDftGWPAGBAghIQkSvNYGqqkUs1771zg0O0OSAUql0D7/7nw
      UyWX11CuX+211t57laLruo4QBmUByKkq6Wx2vdsiRNFZANLZLJFobL3bIkTRmda7AUKsJwmA
      MDQJwBNocfwWb/78X/no3GVy6v1fMzbQRTSRYziSyKvMwWs3WC5gG58UlvVugHh4X5y9ygs/
      +J+UWRUmb1/hcu8YFc3tmCZ7iGoZbKEtjJ9/B60xxs7dexjsusjARJSM2ceB1hCd12/jq92G
      NnebZCKLp6KBrvdPUx5N8MLTB3GY17uHxSNHgCeQWdHJqjq6rnP11hDPv/wcY7euMR9ZYs+R
      vUTGFmhu287Rw/tZTGkszi1Qt+sg6sI4X148y2IyR3R+gan5GPsP7icyH6WlYQsHn3kKu8E+
      EQbr7sZw6IWnufDO23zy+RW21pbxm5O/IVC/lZKAH6vZhs/rprS0lC8vXsJuUXB4vDhsFrx+
      P9ta29ABn7cEnz+IxWLDW+KmZnOAix99QVpb794Vl6Lrur6cSskyqDCkdZ8DfPLRh4wMDXPk
      6BGaWraud3OEwTw2RwCn1UpSzkaLIlvzHEDXVQZvXGQilkXPpTj/25N8eukWGhqdZ9/jYtcg
      OjrXPjvNxRthVHWJyMwyybkxppcyheiDEI9szUOg1NI8pOYYXtBwp2ep33mU2b5z3LyyzKJ/
      K7aZbgaujRFxbsc53c1UVY7xfoXF+AhHT1QVog9CPLI1HwGc3jIaazeBAr7yalgeJePegl1X
      aGmooLKmmpnbMbbsrKGurILldIKz7/wCZ3UTDqssQon1tfYhkKaSSmfIpFNEhnoYX3axY8dm
      yrw6t8MTTIyOsanVT9+NEYYjk7jtbo69+kMSI33E0w84jSlEkax5CJRYGOeDC0OkzZMEWzcz
      eusao+FeTrz4IoGrH5Ot2kXT9joS586QqdpBRbAUe4sJn83DdDyNx+4qQDeEeDSyCiQMTQbh
      wtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQ
      JADC0CQAwtAkAMLQ1n1jrAdJD9xAS8ULWqY5sAlbdVNByxRPtjUHQNeyDHSex7H5MDVelc/P
      nMJWf4D926v48sPTpIOtHO1o5vKHJ0kFtnFodyWzERMlyixLzkoqvPb7ljv/1t+SHbm91uZ9
      jfvIK4T+5K8LWqZ4sq05AOnlGA4lxVhMQx3rxNtyhET/RW5np8hW78ExfYO+K5PEyw/gnL3O
      1LzCxIBOLDHBsRN1heiDEI9szXMAR0kptZUhUCClK1SEQtTUBhma1thcHaSsspLZO0s0bi2n
      KlhOIpPg05O/xFXZiN1i4pOPPuSNv/97ent7CtEfIR7Kmo8AajZNbD7KYnaeCrPCQHiA1Ngc
      W1sauNlzB9vCKHU7yrl16Tb2+ATba1s5/vqPWRq7TbS5muMnngNkVwixPtY+BIrPcTWcIGe+
      juvwUTw9XxLqOEZjXZDU5c/JNe+jobmS9OXPyFbsoTzgx77VRInVy2wqh99pLUQ/hHgkaw6A
      K1DF83/0yr3nmw49e+/xtn1P33vcuu/YvcfBIICTyrVWLsQayXkAYWgSAGFoEgBhaBIAYWgS
      AGFoEgBhaBIAYWgSAGFoEgBhaBIAYWgSAGFoEgBhaBIAYWgSAGFoEgBhaBIAYWgSAGFoj+2+
      QMVmmu7F+fH/K3i5iZf/Bt27qeDlisKQAHxFScexjF8vfLm5NHrBSxWFIkMgYWgSAGFoEgBh
      aAWdAyxHRjjz208w+Wr41ok9fHDyFKq3hpef28uZt39Fzl/HS89tZ3zIgl0NY6raRY3//nuD
      ClEMeR0BNE1D11efys1MjtO07wR17hS913tpfuY7bK0003P2HLXPfp+WUiuR6BwT4X76Z3Qq
      vTYy6TTJRIKcmltzZ4R4WHkFYCA8wuWrXWjayiHw+AMMd33OSExD16DEacPhcJBYzFHiteOy
      2Mnkstz44jwWtxeTonD5yy85dfIdhsKDBemQEA9j1SFQJpulry/M7f5BdF1n395dmBTlvq9N
      LkVJqQpkogQrWzh76h1MFjsvHG/n9Fu/wOx08lJzB4de/mPMyR4GIzUcPnoUkL1BxfpYMQBX
      r3Vz4YtOlpeTlJUGMZlMpFNpnE7HfV9fu/0Aofo2FIsdp8NKZUUVutmOw27hBz+suPvYZsa3
      B8xKJTld5uBifa0YgG2tzVz68jqg8+ofPUcw4F+xMEUx4faU3HvucHnu+9hiATAh2+KK9bZi
      AHp6B3j91W9xu28Qt8tVrDYJUTQrBqCjfTuKolBeFipWe4QoqhUDoHw12VUeMOkV4kmXxyw0
      x+ToFJquMjU6gfrNt0mIolllGVSn78pHvPGPZ2l/uo1o1M6f/sX3MBenbUJ841Y9D1C1eQfP
      f9tKTUsdvmA5tmK0SogiWWUIpOAJBJnsvczZTz7hwoUu5IIFsZHkcTGcCbPDRnlFJcGQD5kO
      i40kjwBYOP7d11hMpbE5/XL9tNhQ8loFGuq+xsVzn/LWv52RIZDYUPIIgILT4yUQDOI0meX+
      VrGh5DEEMlPT3ETC5KDjSJusAokNJa8h0Nl3TzO/EOH0yQ9lCCQ2lLxuidQ1FQ191RtixMOx
      Tl3BnJgtaJmqq4xsxZ6ClrmR5bUKdOy17xGPZ9h3wCsbCRWQq/8ktqkrBS0zXfWUBOAh5DEE
      SvHxqc8orynn83c/JPXNt0mIoskjAE62t3r5+d+9gX/7Du5/L5gQT6Y8AqAyOzNPTlOZm5hG
      7toVG8mKQ3pd18ikE8RSTn70v76Hw2KW2xjFhrLiEUDXljj987cYi4zzq3/5Z06dPi9HALGh
      rBgAk9nLiVdO4LWW8vTxp1HiMbRitUyIIlh1VXN2fJjw4ADubhe1u3ciGxmKjWSVACg07X6G
      P85qfHF9FLNtktyOxgfOA1LzI7x98n3coWaeP9rAv739W7D7efXlp/j1L99Ddwd4/fX9hG9Z
      MSVvEtp1nLqArCuJ9ZPHea0k3V196NkKTInFFS+GGw6H8QUqqKivZiY8xbP/4yfkJrrpPXud
      Iz/9Gea+TuYWl7h29gtajh9jt9/Btc5OZqan2NO+m9LKyoJ1TIh85BEAJ9/6/o+Jx+PoZteK
      /4HP58Wx7CAd6SHqCBALj2ObnaJ8c4hw9xCO6DRNdVtp2LGH7NwY8UwT9fX1bNq0iWCpbL0i
      ii+PAKic+4+/YyDaQm1I56Ufv/LAeUBFczuzc5+y4N7C7n0tdJ//iGxdB82tNaQufEC2rp3K
      YBDnPhNe2yIz8QzVoSAge4OK9ZFHAHRU3ULkznUstm0rLxspZnYcPHHv6c7Dz//u8aEX7j0O
      lQK4qH7o5gpRWKucCMswFh5ly75ncZRNUbVlp2yJIjaUlU+E6VlG+m/y7z//D9Jqkg/f+1hO
      hIkNZcUjgMnk5shLLzM3PkIstgSKRXaFEBvKKpdCJLj86ecEmtpwWGzsO9Qhu0KIDWWVSbAJ
      t/fuTTAlPj8Oj1OOAGJDWXlRx+RgW8dOZvvO8+9vvsu5C51yLZDYUPJYBs2RUn3U1diwpDOo
      IJdEiw0jjwBY2XHgCDtyUUajFvnwP8FcA29jn7xY0DJVdyWLe/6qoGUW06rbow/ePM+bb3xG
      x/GdjI+k2X9wl5wLeEKZk3NYFwv8c7T6kz0oXvUI4CutZte+nYRKK9l3eLvcEyw2lFW3Rw9W
      NODUI/R1d/Heb8/LL8SIDSWPZf0Mi0sWDhw5iGVpUc4Eiw1llRNhaebnVI5/+zATw5Mc+vaz
      MgQSG8qKAVBzU7z/qwvo9gC7OtoJum2yO7TYUFaZBGuEuy/zsXceAF95M8ef3StLoWLDWPli
      OHOIH/zfP6eppaJY7RGiqFYJgJemFm+x2iJE0cnFncLQJADC0CQAwtAkAMLQJADC0AoegMRk
      L2++8zF6Jsa7v3yTk2fOkcnEefcX/8Q7Zz4jmZlhoH+esd6rjEfTha5eiIdS0ADoepovro3g
      smWY7Oml/vCLNJVq9J77nIojr9Log8jCHDMjw9yezLDJa0PXdXRdzi+L9VHQAAxcPkvOE2Bh
      Zob5ZRW/x4HT5WJpPoM/6KTE5iCdS3PxozNYvUHMisKnH3/MP/3D/+d2b08hmyJEXgr6o4/e
      8hrcIxFisUWCFV7O/uY9zIrCM0d38v6vfo3ZZuL55g6OvfoTlHgvw3PVHD9xdyc52RpRrIeC
      BmBT/TY21bWy58BTOOw2vhusQrO6KHHbefW7ITSrmxKXBe9uBYtpExldfnRVrK/CfwIVBYf9
      7va5Hn/w3p89/t/t/myzAZjl0mqx7mQZVBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAY
      mgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoE
      QBhaQbdFiU4O8MH750hg5cUXj3Hm1BlwBHj15YP8+q1T6J5SXnttH4M9VkypmwTbjlEbkM1R
      xPopaAB8FU28/sNyLl/sZDI8wTPf+xHZyVv0fHqVgz/5Geb+TuZiMbrOd9Jw6AC7/A5udd9k
      LjLLjrbtBMrKC9kcIVZV0CGQmpjnwpVbtO47SNCmk9N0dE3DbAY1p6PqGibFhD8UIhVfQkcn
      FCqlpq4Wj6ekkE0RIi8FPQKM9nVxq7OX4ZExXnz+CB+c+iVKSRWvfPsI77z5jxCo4Tvb62ja
      VY5HCTMwFael8u4vUMreoGI9FDQAjR3H+T8dx+89/9Gf/ex3j//3X9x73LYTQIY7Yv3JKpAw
      NAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNPmRLvHN0VUcc50FLzbraUR1hFZ/YR4kAOIbo2hZ
      /P3/UPByo81/WrAAyBBIGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYWpHOBOvo
      ug4o/+3fKMp//5sQxVKUAKiLo7zx5m/Q3X5ee20/4R4rpuRNynYdl32BxLoqyhBopneQoz/9
      c55pa2B+aZHOT95l2bOZGr98+MX6KkoALFadZDJHRs1hMVmoa2omEZ1D0/ViVC/EAxUlAGU7
      Oug//S90TyUo8wep39ZOW7WF8Ey8GNUL8UDFmQRbfXz/9/YIat0OUFqUqoVYybrfD/DJRx8y
      MjTMs8efoWVr672/b3rpp6iL8wWty1rdhNNqvfdcUZSvVqfAVL4Z5fm/LGh9AA5/OfpXdf5+
      fQDK1u+g1uwraH2Kp/LBfax7GtVfW9D6sHsfWB8WE7nmHxS2PsAaaEK5956CDl/94+Epuq7r
      y6kUkWisYA18FOuxNaLDaiGVzRWtvvXoY7HrLHZ9NrMZVdNQH3E++dicCMtpWvHrVItb57r0
      sch1Frs+VdfRHvXrn8coAFlVve/fc5kkkakpIrPzqAVeNFrpf5aWTbGUSAMaqWR6xXLUbJrc
      /Zv/NQ/q439JxWNEZmbJ5lb5EOk66fTKbcq3zrs0FmNLeZW31vqyqWUS6btH3UxyiYXY2hZC
      VE3jfl/+6cTi3fdylS+5xyYAD7I0O818bJFsJnvfjn5TcgvDXLrWT1ZLMzgwct/XxOYmWU6q
      JOdGmU+utcYU/T13SMYXiC1n7v8SLcPE5AygMz42vtYK78nFZ+nq7GLpa6NBlch0pODv+ejQ
      HYaH7r6fw+E7ZLL/FRiN+ZkZVst+PrT0Ir29YZaXZunrH1nx+LDuk+BV6SrzkRlSaZVMYolQ
      TR1z4TBul5XBhQWqQiEmx6fAYmdLlZ/u0VnMipmt9eXc6ruDw1fB7l2tmB/yigvFZKai1MFU
      JAboDN+6xkwsia+yEcviCNGMAzU9RUYrY0uDld5rlwg7nBzct/MRO2rFbskwu5hhW42Jm5fO
      kcwqVG1pI7k4S61XIxy1MHKnn+T2dhKzY1yZGcVb086WWv8j1nnX7NwiW7dXMTW+QDQ5yOhc
      hm3tO1mYi+FQElzvDuOvbmZHy9om0LqWJIsHu5oivjTH8MgYtRYHk3duYwttwpFJYTal6O0b
      p7x+M8mJfiJJE3v3H8DjzP+jurywRGl9A9VBH+GeW0wO3WZsKkptYz0TA/0ksNPeWkdXV8/j
      fwTA7KB1917ad23DouVQNZVkMoWmqjS2dWDXctS27qKmzMnyco6Gtt1UlbmZHBzG4gngclgf
      +VvMW17F8sw4OTXLsmqnY/8eMvF5FLuXXXt30tDYTNvuNpxWB627D1AecK6hozq1WztorfUw
      OjkOtkp272xgYSFOLpcjnUxg85XTtKWVzXXluEtr2HtoN+b0Gieceo6p0WHu3JlkemIIT6AU
      j9NKfHkZVVVZii3hDfqZj8ysrR5gOTLJxMQI45NjxDIuNre0snVzJa7SWrY11aCpKvORRVr3
      HaCu1EZKc2LJpVhaZQj6h+xOK0uxOGouSUo1E42n6di/n6ApznzGSsDrITY/jzsYfPwDYLOb
      CXdf4/qNHrylAQZvdYPTg9MbwG01EayqYmG4l4W0A3+JmYEbV0lqbpp2tWHLpVDMVkyPcL2d
      yeHFY7dSV7UJuy9EZamTG503KK+pxxcIYlIU3G43gz096E4vTit4vd419FRnMtzD7eEom0qr
      8LuT3ByYpb6uDEt2meG5DCUuG9ZcjPBoBK+3BLDh9a7tchItl6OipZ0DBw/SWl9ORlXJaQoe
      lxt/0IfbW4KqmamqKltTPQCq2cVTR57m0OFDWMncfb9MNoIBD4qi4A0GqGqsZeTGVcbnMrjs
      Ot6yCtz2hxuo2LwhfMS5fr2X8to6NtdWcPPqFaKmMuqCFlQNvIEAWlZ9fJZBCyG3vEjK6sFj
      e+xzLR4Tj/8c4CFY3F48690I8USRr8o/oOsaalHPD+ioqvq1M8SieCQAf2BxeoBLl3vzPueQ
      jk0TSz36h1fXNLoufcbkbP7r8JHp6UeuT3zdhhoCFcJ8VKU8ZCaVTjPae4N4PIXicmMyOWhp
      LGdgYBC7rwK/Jc1MbJkyjwNrZYCBrpssZuzU15YwNDRFqGYzDVWrX/CnZWK4AtXEYzFStiWu
      3xxDVzTsZhOljVsxL40zNZ+iobWZ6b4+TL5KbEoKjx1u9Q4SqtlMLjrKwrKZXQfascsddg9F
      jgC/T0sxNNDP9OAdRiNL2EpK2dtWg792J5t8Nsbu9LOUzpFMxEknMzRs24GTLInlZXR3iN0d
      raRii2iaytjIWF5VRgb7GJ+ZY3gwTEZVqdnSTllZiJ07tqHnFhjoHUHLpUmkMij2AFuaqkkl
      kkQjERrb91Nd5iIeT5KYGWEuKcOohyVHgN+TW5pjy6EXqQnA0NA0dpcTxQouswmb6sTjayDW
      O4zd4cTpsuK0mUk73bg9HnKREa53xikPWTHbnARd+U3H045yjh/bzML4MBmsOOxmTG43itmC
      w+6npqGcaELHZrXiC/gwKQouj5tAsISersv4K2qxWCx4S8uwy9fZQ9tQy6BCPKz/BHt+IWVv
      mgOeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      p7hSAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
